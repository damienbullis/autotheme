name: Release

on:
  # push:
  #   tags:
  #     - 'v*.*.*'  # Trigger workflow for semantic version tags like v1.2.3
  workflow_dispatch: # Allow manual triggering of workflow
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v0.0.0'
      

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: 
      contents: write
      packages: write


    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.21'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure tags are fetched 

      - name: Install git-chglog
        run: |
          curl -sL https://github.com/git-chglog/git-chglog/releases/download/v0.15.4/git-chglog_0.15.4_linux_amd64.tar.gz | tar xz && \
          sudo mv git-chglog /usr/local/bin/git-chglog

      # - name: Ensure tags exist
      #   run: |
      #     if [ -z "$(git tag)" ]; then
      #       echo "No Git tags found. Creating a tag for changelog generation."
      #       exit 1
      #     fi

      - name: Generate Changelog
        run: git-chglog -o CHANGELOG.md

      - name: Commit Changelog
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          
          # Discard changes to LICENSE and README.md if they were modified
          git checkout -- LICENSE README.md
          
          # Stage and commit only CHANGELOG.md
          git add CHANGELOG.md
          
          # Commit if there are changes
          git diff --cached --quiet || git commit -m "Update changelog for ${{ github.ref }}"
          
          # Push changes
          git push
      
      - name: Create Git Tag from Input
        run: |
          echo "Creating tag: ${{ github.event.inputs.version }}"
          git tag -a "${{ github.event.inputs.version }}" -m "Release ${{ github.event.inputs.version }}"
          git push origin "${{ github.event.inputs.version }}"

      - name: Install GoReleaser
        run: |
          curl -sL https://github.com/goreleaser/goreleaser/releases/download/v2.3.2/goreleaser_Linux_x86_64.tar.gz -o goreleaser.tar.gz
          tar -xzf goreleaser.tar.gz -C /usr/local/bin

      - name: Run GoReleaser
        run: goreleaser release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.event.inputs.version }}